# Copyright (c) 2020 Mohammad Ashar Khan
# Distributed under Boost Software License, Version 1.0
# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)

name: Thread Sanitizer 
# Trigger on Push to the repository, regardless of the branch.
# For fine tune, You can add specific branches or tags.
on: 
  push:
    paths-ignore: 
      - '**.md'
      - 'doc/**'
  pull_request:
    paths-ignore: 
      - '**.md'
      - 'doc/**'
jobs:
  build:
    name: "${{matrix.config.cxx}} -std=c++${{matrix.config.cxxstd}}"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      # If any compiler fails to compile, continue CI for next compiler in matrix instead of failing early
      matrix:
        config:
            - {cc: gcc-9, cxx: g++-9, cxxstd: 2a, name: gcc}
            - {cc: clang-9, cxx: clang++-9, cxxstd: 2a, name: clang}
    steps:
      - uses: actions/checkout@v2
      
      - name: Prepare BOOST_ROOT
        run: |
         cd ${GITHUB_WORKSPACE}
         cd ..
        
         git clone -b master --depth 1 https://github.com/boostorg/boost.git boost-root
         cd boost-root
        
         git submodule update --init --depth=1 --jobs 8 tools/build
         git submodule update --init --depth=1 --jobs 8 libs/config
         git submodule update --init --depth=1 --jobs 8 tools/boostdep
        
         mkdir -p libs/numeric/
         cp -rp ${GITHUB_WORKSPACE}/. libs/numeric/ublas
         python tools/boostdep/depinst/depinst.py -g " --depth=1" -I benchmarks numeric/ublas
        
         ./bootstrap.sh
         ./b2 -j 8 headers
        
         echo ::set-env name=BOOST_ROOT::${PWD}
        
      - name: Prepare Build
        run: |
         echo $BOOST_ROOT
         cd $BOOST_ROOT
        
         echo "using ${{matrix.config.name}} : : ${{ matrix.config.cxx }} ;" >> ~/user-config.jam;

      - name: Test Benchmarks
        run: |
         cd $BOOST_ROOT
         cd libs/numeric/ublas
         $BOOST_ROOT/b2 -j 4 benchmarks toolset=${{matrix.config.name}} cxxstd=${{matrix.config.cxxstd}} 
        
      - name: Test Tensor Examples
        run: |
         cd $BOOST_ROOT
         cd libs/numeric/ublas
         $BOOST_ROOT/b2 -j 4 examples/tensor toolset=${{matrix.config.name}} cxxstd=${{matrix.config.cxxstd}} cxxflags="-g -fsanitize=thread -O2" linkflags="-fsanitize=thread"
        
      - name: Test Tensor
        run: |
         cd $BOOST_ROOT
         cd libs/numeric/ublas
         $BOOST_ROOT/b2 -j 4 test/tensor toolset=${{matrix.config.name}} cxxstd=${{matrix.config.cxxstd}} cxxflags="-g -fsanitize=thread -O2" linkflags="-fsanitize=thread"
