# Copyright (c) 2020 Mohammad Ashar Khan
# Distributed under Boost Software License, Version 1.0
# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)

name: Linux Clang Release
# Trigger on Push to the repository, regardless of the branch.
# For fine tune, You can add specific branches or tags.
on: 
  push:
    paths-ignore: 
      - '**.md'
      - 'doc/**'
  pull_request:
    paths-ignore: 
      - '**.md'
      - 'doc/**'

jobs:
  build:
    name: "${{matrix.config.cxx}} -std=c++${{matrix.config.cxxstd}}"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      # If any compiler fails to compile, continue CI for next compiler in matrix instead of failing early
      matrix:
        config: 
          - { cc: clang-8, cxx: clang++-8, cxxstd: 11}
          - { cc: clang-9, cxx: clang++-9, cxxstd: 11}
          - { cc: clang-10, cxx: clang++-10, cxxstd: 11}
          - { cc: clang-11, cxx: clang++-10, cxxstd: 11}
          - { cc: clang-10, cxx: clang++-10, cxxstd: 20}
          - { cc: clang-11, cxx: clang++-10, cxxstd: 20}
         
    steps:
    - uses: actions/checkout@v2
    
    - name: Install Clang 8
      if: matrix.config.cxx == 'clang++-8'
      run: sudo apt-get update && sudo apt-get install -y clang-8 
      
    - name: Install Clang 9
      if: matrix.config.cxx == 'clang++-9'
      run: sudo apt-get update && sudo apt-get install -y clang-9
    
    - name: Install Clang 10
      if: matrix.config.cxx == 'clang++-10'
      run: sudo apt-get update && sudo apt-get install -y clang-10
        
    - name: Install Clang 11
      if: matrix.config.cxx == 'clang++-11'
      run: sudo apt-get update && sudo apt-get install -y clang-11
        
    - name: Prepare BOOST_ROOT
      run: |
        cd ${GITHUB_WORKSPACE}
        cd ..
        
        git clone -b master --depth 1 https://github.com/boostorg/boost.git boost-root
        cd boost-root
        
        git submodule update --init --depth=1 --jobs 8 tools/build
        git submodule update --init --depth=1 --jobs 8 libs/config
        git submodule update --init --depth=1 --jobs 8 tools/boostdep
        
        mkdir -p libs/numeric/
        cp -rp ${GITHUB_WORKSPACE}/. libs/numeric/ublas
        python tools/boostdep/depinst/depinst.py -g " --depth=1" -I benchmarks numeric/ublas
        
        ./bootstrap.sh
        ./b2 -j 8 headers
        
        #echo ::set-env name=BOOST_ROOT::${PWD}
        echo "BOOST_ROOT=${PWD}" >> ${GITHUB_ENV}
        
    - name: Prepare Build
      run: |
        echo $BOOST_ROOT
        cd $BOOST_ROOT
        
        echo "using clang : : ${{ matrix.config.cxx }} ;" >> ~/user-config.jam;
        
#    - name: Test Benchmarks
#      run: |
#        cd $BOOST_ROOT
#        cd libs/numeric/ublas
#        $BOOST_ROOT/b2 -j 4 benchmarks toolset=clang cxxstd=${{matrix.config.cxxstd}} cxxflags="-O3"
        
    - name: Test Tensor Examples
      run: |
        cd $BOOST_ROOT
        cd libs/numeric/ublas
        $BOOST_ROOT/b2 -j8 examples/tensor toolset=clang cxxstd=${{matrix.config.cxxstd}} cxxflags="-O3" 
        
    - name: Test Tensor
      run: |
        cd $BOOST_ROOT
        cd libs/numeric/ublas
        $BOOST_ROOT/b2 -j8 test/tensor toolset=clang cxxstd=${{matrix.config.cxxstd}} cxxflags="-O3"
        
