# Copyright (c) 2020 Mohammad Ashar Khan, Cem Bassoy
# Distributed under Boost Software License, Version 1.0
# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)

name: Linux GCC Debug
# Trigger on Push to the repository, regardless of the branch.
# For fine tune, You can add specific branches or tags.
on: 
  push:
    paths-ignore: 
      - '**.md'
      - 'doc/**'
  pull_request:
    paths-ignore: 
      - '**.md'
      - 'doc/**'
jobs:
  build:
    name: "${{matrix.config.cxx}} -std=c++${{matrix.config.cxxstd}}"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      # If any compiler fails to compile, continue CI for next compiler in matrix instead of failing early
      matrix:
        config:
          - {cc: gcc-7, cxx: g++-7, cxxstd: 11}
          - {cc: gcc-8, cxx: g++-8, cxxstd: 11}
          - {cc: gcc-9, cxx: g++-9, cxxstd: 11}
          - {cc: gcc-10, cxx: g++-10, cxxstd: 11}
          - {cc: gcc-10, cxx: g++-10, cxxstd: 20}          
    steps:
      - uses: actions/checkout@v2
      
      - name: Install g++-7
        if: matrix.config.cxx == 'g++-7'
        run: sudo apt update && sudo apt-get install -y g++-7

      - name: Install g++-8
        if: matrix.config.cxx == 'g++-8'
        run: sudo apt update && sudo apt-get install -y g++-8

      - name: Install g++-10
        if: matrix.config.cxx == 'g++-10'
        run: sudo apt update && sudo apt-get install -y g++-10
       
      - name: Prepare BOOST_ROOT
        run: |
         cd ${GITHUB_WORKSPACE}
         cd ..
        
         git clone -b master --depth 1 https://github.com/boostorg/boost.git boost-root
         cd boost-root
        
         git submodule update --init --depth=1 --jobs 8 tools/build
         git submodule update --init --depth=1 --jobs 8 libs/config
         git submodule update --init --depth=1 --jobs 8 tools/boostdep
        
         mkdir -p libs/numeric/
         cp -rp ${GITHUB_WORKSPACE}/. libs/numeric/ublas
         python tools/boostdep/depinst/depinst.py -g " --depth=1" -I benchmarks numeric/ublas
        
         ./bootstrap.sh
         ./b2 -j 8 headers
        
         #echo ::set-env name=BOOST_ROOT::${PWD}
         echo "BOOST_ROOT=${PWD}" >> $GITHUB_ENV
        
      - name: Prepare Build
        run: |
         echo $BOOST_ROOT
         cd $BOOST_ROOT
        
         echo "using gcc : : ${{ matrix.config.cxx }} ;" >> ~/user-config.jam;

#      - name: Test Benchmarks
#        run: |
#         cd $BOOST_ROOT
#         cd libs/numeric/ublas
#         $BOOST_ROOT/b2 -j 4 benchmarks toolset=gcc cxxstd=${{matrix.config.cxxstd}}
        
      - name: Test Tensor Examples
        run: |
         cd $BOOST_ROOT
         cd libs/numeric/ublas
         $BOOST_ROOT/b2 -j8 examples/tensor toolset=gcc cxxstd=${{matrix.config.cxxstd}} cxxflags="-O0" 
        
      - name: Test Tensor
        run: |
         cd $BOOST_ROOT
         cd libs/numeric/ublas
         $BOOST_ROOT/b2 -j8 test/tensor toolset=gcc cxxstd=${{matrix.config.cxxstd}} cxxflags="-O0 -g --coverage" linkflags="--coverage"

      - name: Report Code coverage
        if: matrix.config.cxxstd == '20' && matrix.config.cxx == 'g++-10'
        run: |
         ${GITHUB_WORKSPACE}/.ci/report_coverage.sh
        
         curl -s https://codecov.io/bash > cov.sh
         chmod +x cov.sh
         ./cov.sh -f coverage.info || echo "Codecov did not collect coverage reports"
         
